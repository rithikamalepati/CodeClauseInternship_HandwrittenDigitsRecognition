# -*- coding: utf-8 -*-
"""handwritten digits

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dFFL2TIAGVOCAIXLRzt8OaKIYHP9v3GK
"""

import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
from tensorflow.keras.datasets import mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Flatten, Dense

# Load and preprocess the MNIST dataset
(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0

# Create and compile the model
model = Sequential([
    Flatten(input_shape=(28, 28)),
    Dense(128, activation='relu'),
    Dense(10, activation='softmax')
])
model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])

# Train the model
model.fit(x_train, y_train, epochs=5)

# Evaluate the model
test_loss, test_acc = model.evaluate(x_test, y_test)
print(f'Test accuracy: {test_acc}')

# Make predictions
predictions = model.predict(x_test)

# Sample prediction
sample_index = 0
sample_image = x_test[sample_index]
sample_label = y_test[sample_index]
prediction = np.argmax(predictions[sample_index])

plt.imshow(sample_image, cmap=plt.cm.binary)
plt.xlabel(f'Actual: {sample_label}, Predicted: {prediction}')
plt.show()